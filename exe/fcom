#!/usr/bin/env ruby

# frozen_string_literal: true

# TODO: remove the need to disable some/all of these rubocop metrics.
# rubocop:disable Metrics/AbcSize, Metrics/BlockLength, Metrics/CyclomaticComplexity
# rubocop:disable Metrics/MethodLength, Metrics/PerceivedComplexity

require 'colorize'

def parse
  use_regex = (ARGV[2] == 'regex')
  expression_to_match = ARGV[0]
  expression_to_match = Regexp.escape(expression_to_match).gsub('\\ ', ' ') unless use_regex
  regex = /(\+|\-)\s?.*#{expression_to_match}.*/

  previous_commit = nil
  filename = nil

  STDIN.each do |line|
    line.chomp!
    if (match = line.match(/^commit (.*)/)&.[](1))
      previous_commit = match
    elsif line.match?(/^diff /)
      old_filename = line.match(%r{ a/(\S+)})&.[](1) || '[weird filename]'
      new_filename = line.match(%r{ b/(\S+)})&.[](1) || '[weird filename]'
      filename =
        case
        when old_filename == new_filename then old_filename
        else "#{old_filename} --> #{new_filename}"
        end
    elsif line.match?(regex)
      if previous_commit
        puts("\n\n")
        title, sha, author, date = previous_commit.split('|')
        sha_with_url =
          "#{sha[0, 7]} ( https://github.com/hired/hired/commit/#{sha[0, 7]} )"
        puts([title, sha_with_url, author, date])
        puts('==============================================')
        previous_commit = nil
      end

      if filename
        puts(filename)
        filename = nil
      end

      if line.start_with?('+')
        puts(line.green)
      elsif line.start_with?('-')
        puts(line.red)
      else
        puts(line)
      end
    end
  end
end

def query
  days = ARGV[1] || -1
  use_regex = (ARGV[2] == 'regex')
  expression_to_match = ARGV[0]
  expression_to_match = Regexp.escape(expression_to_match).gsub('\\ ', ' ') unless use_regex

  if expression_to_match.nil? || expression_to_match.size.zero?
    puts('provide expression to match as first argument')
    exit
  end

  quote = expression_to_match.include?('"') ? "'" : '"'
  # rubocop:disable Style/IfUnlessModifier
  command = <<~COMMAND.tr("\n", ' ')
    git log #{"--since=#{days}.day" unless days == -1} --full-diff --format="commit %s|%H|%an|%cr (%ci)" --source -p . |
      rg #{quote}(#{expression_to_match})|(^commit )|(^diff )#{quote} --color never |
      fcom "#{ARGV[0]}" #{ARGV[1] || 10_000} #{ARGV[2] || 'dummy_placeholder_for_regex'} PARSE_MODE=TRUE
  COMMAND
  # rubocop:enable Style/IfUnlessModifier
  puts("Executing command: #{command}")
  system(command)
end

is_parse_mode = (ARGV[3] == 'PARSE_MODE=TRUE')
if is_parse_mode
  parse
else
  query
end

# rubocop:enable Metrics/AbcSize, Metrics/BlockLength, Metrics/CyclomaticComplexity
# rubocop:enable Metrics/MethodLength, Metrics/PerceivedComplexity
